{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["config","showCube","dimension","velocity","boundaryType","antialias","direction","xMin","xMax","yMin","yMax","zMin","zMax","lines","colorMode","color","transparency","limitConnections","maxConnections","minDistance","visible","particles","shape","boundingBox","count","minSize","maxSize","cameraControls","enabled","enableDamping","dampingFactor","enableZoom","minZoom","maxZoom","autoRotate","autoRotateSpeed","resetCameraFlag","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+LAQMA,EAAS,CACbC,UAAU,EACVC,UAAW,KACXC,SAAU,GACVC,aAAc,SACdC,WAAW,EACXC,UAAW,CACTC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,KAAM,GAERC,MAAO,CACLC,UAAW,QACXC,MAAO,UACPC,aAAc,IACdC,kBAAkB,EAClBC,eAAgB,GAChBC,YAAa,GACbC,SAAS,GAEXC,UAAW,CACTP,UAAW,QACXC,MAAO,UACPC,aAAc,EACdM,MAAO,SACPC,YAAa,SACbC,MAAO,IACPC,QAAS,GACTC,QAAS,GACTN,SAAS,GAEXO,eAAgB,CACdC,SAAS,EACTC,eAAe,EACfC,cAAe,IACfC,YAAY,EACZC,QAAS,EACTC,QAAS,EACTC,YAAY,EACZC,iBAAkB,GAClBC,iBAAiB,GAEnBnB,kBAAkB,EAClBC,eAAgB,IAIH,oBAAM,cAAC,IAAD,CAAelB,OAAQA,KC9C7BqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,WAM1Bd,M","file":"static/js/main.ff7720aa.chunk.js","sourcesContent":["import React from 'react';\nimport ParticleField from 'react-particles-webgl';\n\n/**\n * The default configuation for the ParticleField component\n *\n * Any option passed in via props will overwrite the default config\n */\nconst config = {\n  showCube: false,\n  dimension: '3D',\n  velocity: 0.2,\n  boundaryType: 'bounce',\n  antialias: false,\n  direction: {\n    xMin: -1,\n    xMax: 1,\n    yMin: -1,\n    yMax: 1,\n    zMin: -1,\n    zMax: 1\n  },\n  lines: {\n    colorMode: 'solid',\n    color: '#ffffff',\n    transparency: 0.99,\n    limitConnections: true,\n    maxConnections: 10,\n    minDistance: 70,\n    visible: true\n  },\n  particles: {\n    colorMode: 'solid',\n    color: '#ffffff',\n    transparency: 1,\n    shape: 'circle',\n    boundingBox: 'canvas',\n    count: 900,\n    minSize: 10,\n    maxSize: 24,\n    visible: true\n  },\n  cameraControls: {\n    enabled: true,\n    enableDamping: true,\n    dampingFactor: 0.05,\n    enableZoom: false,\n    minZoom: 1,\n    maxZoom: 2,\n    autoRotate: true,\n    autoRotateSpeed: -0.3,\n    resetCameraFlag: false\n  },\n  limitConnections: true,\n  maxConnections: 10\n}\n\n\nexport default () => <ParticleField config={config} />;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('plexus')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}